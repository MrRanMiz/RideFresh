#include "DHT.h"
#define DHT11Pin 2
#define DHTType DHT11



//OLED

#include   <Wire.h>
#include <Adafruit_GFX.h>
#include <Adafruit_SSD1306.h>

DHT   HT(DHT11Pin,DHTType);
float humi;
float tempC;
float tempF;

int scene= 1; 
int mode= 1; //0= COLD; 1= HOT

//OLED   define
#define SCREEN_WIDTH 128 // OLED display width, in pixels
#define SCREEN_HEIGHT   64 // OLED display height, in pixels
// Declaration for an SSD1306 display connected   to I2C (SDA, SCL pins)
Adafruit_SSD1306 display(SCREEN_WIDTH, SCREEN_HEIGHT,   &Wire, -1);


const unsigned char myBitMap [] PROGMEM = {
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
	0x00, 0x00, 0x00, 0x03, 0x8f, 0x20, 0x78, 0xe3, 0xc0, 0x80, 0x39, 0xe3, 0xc0, 0x00, 0x00, 0x00, 
	0x00, 0x00, 0x00, 0x07, 0x8f, 0x20, 0x79, 0xe3, 0xc0, 0x86, 0x79, 0xe3, 0xc0, 0x00, 0x00, 0x00, 
	0x00, 0x00, 0x00, 0x04, 0x08, 0x20, 0x41, 0x00, 0x80, 0xc6, 0x45, 0x12, 0x00, 0x00, 0x00, 0x00, 
	0x00, 0x00, 0x00, 0x04, 0x08, 0x20, 0x41, 0x00, 0x80, 0xee, 0x45, 0x12, 0x00, 0x00, 0x00, 0x00, 
	0x00, 0x00, 0x00, 0x03, 0x8e, 0x20, 0x71, 0x00, 0x80, 0xb6, 0x45, 0x13, 0x80, 0x00, 0x00, 0x00, 
	0x00, 0x00, 0x00, 0x00, 0xc8, 0x20, 0x41, 0x00, 0x80, 0x86, 0x45, 0x12, 0x00, 0x00, 0x00, 0x00, 
	0x00, 0x00, 0x00, 0x00, 0x48, 0x20, 0x41, 0x00, 0x80, 0x86, 0x45, 0x12, 0x00, 0x00, 0x00, 0x00, 
	0x00, 0x00, 0x00, 0x04, 0x48, 0x20, 0x41, 0x10, 0x80, 0x86, 0x45, 0x12, 0x00, 0x00, 0x00, 0x00, 
	0x00, 0x00, 0x00, 0x03, 0x8f, 0xbe, 0x7c, 0xe0, 0x80, 0x86, 0x39, 0xe3, 0xe0, 0x00, 0x00, 0x00, 
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
	0x1f, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xf8, 
	0x20, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0c, 
	0x40, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x06, 
	0x40, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x06, 
	0x40, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x06, 
	0x40, 0x00, 0x07, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x18, 0x00, 0x00, 0x81, 0xc7, 0x86, 
	0x40, 0x00, 0x07, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 0x10, 0x38, 0x00, 0x00, 0x8b, 0xc7, 0x86, 
	0x40, 0x00, 0x04, 0x49, 0x1c, 0x38, 0xe0, 0x24, 0x70, 0xf0, 0x20, 0xe4, 0x80, 0x8a, 0x21, 0x06, 
	0x40, 0x00, 0x04, 0x4b, 0x3c, 0x79, 0xe0, 0x2c, 0xf1, 0xf0, 0x79, 0xe5, 0x80, 0x8a, 0x21, 0x06, 
	0x40, 0x00, 0x07, 0x8c, 0x22, 0x41, 0x00, 0x30, 0x89, 0x10, 0x61, 0x16, 0x00, 0xfa, 0x21, 0x06, 
	0x40, 0x3c, 0x04, 0x08, 0x3e, 0x38, 0xe0, 0x20, 0xf9, 0x10, 0x21, 0x14, 0x00, 0x9a, 0x21, 0x06, 
	0x40, 0x7c, 0x04, 0x08, 0x20, 0x0c, 0x30, 0x20, 0x81, 0x10, 0x21, 0x14, 0x00, 0x8a, 0x21, 0x06, 
	0x40, 0xfc, 0x04, 0x08, 0x22, 0x45, 0x10, 0x20, 0x89, 0x10, 0x21, 0x14, 0x00, 0x8a, 0x21, 0x06, 
	0x40, 0x78, 0x04, 0x08, 0x1c, 0x38, 0xe0, 0x20, 0x70, 0xf0, 0x20, 0xe4, 0x00, 0x89, 0xc1, 0x06, 
	0x40, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x06, 
	0x40, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x06, 
	0x40, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x06, 
	0x40, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x06, 
	0x60, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x04, 
	0x3f, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xfc, 
	0x1f, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xf8, 
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
	0x1f, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xf8, 
	0x20, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0c, 
	0x40, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x06, 
	0x40, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x06, 
	0x40, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x06, 
	0x40, 0x00, 0x0e, 0x00, 0x00, 0x00, 0x02, 0x04, 0x00, 0x00, 0x10, 0x00, 0x01, 0x86, 0x20, 0xe6, 
	0x40, 0x00, 0x09, 0x00, 0x70, 0x00, 0x02, 0x04, 0x00, 0xe0, 0x20, 0x00, 0x02, 0x49, 0x20, 0x96, 
	0x40, 0x00, 0x09, 0x2c, 0xf3, 0xcf, 0x03, 0xc4, 0x49, 0xe0, 0x63, 0xcb, 0x02, 0x09, 0x20, 0x96, 
	0x40, 0x00, 0x09, 0x38, 0x8a, 0x49, 0x02, 0x44, 0x49, 0x10, 0x72, 0x4e, 0x02, 0x09, 0x20, 0x96, 
	0x40, 0x00, 0x0e, 0x20, 0xfb, 0x8e, 0x02, 0x44, 0x49, 0xf0, 0x22, 0x48, 0x02, 0x09, 0x20, 0x96, 
	0x40, 0x00, 0x08, 0x20, 0x81, 0xc7, 0x02, 0x44, 0x49, 0x00, 0x22, 0x48, 0x02, 0x09, 0x20, 0x96, 
	0x40, 0x00, 0x08, 0x20, 0x8a, 0x49, 0x02, 0x44, 0x49, 0x10, 0x22, 0x48, 0x02, 0x49, 0x20, 0x96, 
	0x40, 0x00, 0x08, 0x20, 0x73, 0xcf, 0x03, 0xc6, 0x78, 0xe0, 0x23, 0xc8, 0x03, 0xcf, 0x3c, 0xf6, 
	0x40, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x06, 
	0x40, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x06, 
	0x40, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x06, 
	0x40, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x06, 
	0x40, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x06, 
	0x60, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x04, 
	0x3f, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xfc
};



void setup() {
  Serial.begin(9600);
  //For DHT11
  pinMode(4,INPUT_PULLUP);
  pinMode(7,INPUT_PULLUP);

   HT.begin();
  //For OLED I2C
  if(!display.begin(SSD1306_SWITCHCAPVCC, 0x3C))   { // Address 0x3D for 128x64
    Serial.println(F("SSD1306 allocation failed"));
     for(;;);
  }
  display.display(); //Display logo
  delay(1000); 
   display.clearDisplay();
}

void   oledDisplayHeader(){
  display.setTextSize(1);         // Set text size
  display.setTextColor(WHITE);    // Set text color
  display.setCursor(0, 35);        // Set cursor to top-left
  display.print("Mode:");           // Print "Mode" label
  display.setCursor(0, 0);       // Move cursor to the right
  display.print("Temperature");    // Print "Temperature" label
  display.setCursor(0,47);
  display.setTextSize(2);
  if (mode==0){
      display.print("COLD");
  }
  else if (mode==1){
    display.print("HOT");
  }
  }

void oledDisplay(int size, int x,int   y, float value, String unit){
 int charLen=12;
 int xo=x+charLen*3.2;
   int xunit=x+charLen*3.6;
 int xval = x; 
 display.setTextSize(2);
 display.setTextColor(WHITE);
   
 if (unit=="%"){
   display.setCursor(x, y);
   display.print(value,0);
    display.print(unit);
 } else {
   if (value>99){
    xval=x;
   }   else {
    xval=x+charLen;
   }
   /*
   display.setCursor(0,12);
   display.print(value,0);
   display.drawCircle(xo, y+2, 2, WHITE);  // print degree symbols (  )
   display.setCursor(xunit,   y);
   display.print(unit);
   */

   display.setCursor(0,12);
   display.print(value,0);
   display.print((char)247);
   display.print(unit);
 }
 
}

void scene1(){ //Main Menu
display.drawBitmap(0, 0, myBitMap, 128, 64, SSD1306_WHITE);

  
}

void scene2(){ //Main Scene

  tempC = HT.readTemperature();
  tempF = HT.readTemperature(true);


  oledDisplayHeader();
  oledDisplay(2,70,16,tempC,"C");
}

void loop() {
 delay(1000);


/*
   Serial.print("Humidity:");
 Serial.print(humi,0);
 Serial.print("%");
   Serial.print(" Temperature:");
 Serial.print(tempC,1);
 Serial.print("C   ~ ");
 Serial.print(tempF,1);
 Serial.println("F");
*/

if (digitalRead(7)==0){
  Serial.println("MDEFSGSG");
  scene= 2;
}

Serial.println(digitalRead(7));

 display.clearDisplay();
 /*
  oledDisplayHeader();
  oledDisplay(3,5,28,humi,"%");
  oledDisplay(2,70,16,tempC,"C");
  oledDisplay(2,70,44,tempF,"F");
*/


  if (scene==1){
    scene1();
  }
  else if (scene==2) {
    scene2();
  }else {
    scene1();
  }
  
 display.display(); 




 
}
